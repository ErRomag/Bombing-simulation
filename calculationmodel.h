#ifndef CALCULATIONMODEL_H
#define CALCULATIONMODEL_H

#include <QObject>
#include <QGroupBox>
#include <QVector>
#include <QMap>

class calculationModel : public QObject
{
    Q_OBJECT
    Q_PROPERTY(int RadioButton READ RadioButton WRITE setRadioButton NOTIFY RadioButtonChanged)
    Q_PROPERTY(int numCheckBox READ numCheckBox WRITE setNumCheckBox NOTIFY NumCheckBoxChanged)
    Q_PROPERTY(float aimDispTextField)

public:
    explicit calculationModel(QObject *parent = nullptr);

    void bindObjects();  // Ô‡Î‡Î‡Î‡Î‡Î‡ÎÎ‡



    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è CheckBox
    int numCheckBox(){
       return _numCheckBox;
    }
    void setNumCheckBox(int num){
        _numCheckBox = num ;
       emit  NumCheckBoxChanged();
    }

    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è RadioButton
    int RadioButton(){
       return _radioButoon;
    }
    void setRadioButton(int val){
        _radioButoon = val ;
       emit  RadioButtonChanged();
    }

signals:
    void RadioButtonChanged();
    void NumCheckBoxChanged();


public slots:
    void cppSlot(const QString &msg);





private:
    float FEopt[26][7]; /* –º–∞—Å—Å–∏–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (Functional Element) –ó– –ö [–Ω—É–ª–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è]
                          FE[i][j], –≥–¥–µ: i - –Ω–æ–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞;
                          j = {1(–∫–æ–æ—Ä–¥. [x]); 2(–∫–æ–æ—Ä–¥. [y]); 3(–¥–ª–∏–Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ [a]); 4(—à–∏—Ä–∏–Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ [b]);
                          5(—É–≥–æ–ª [fi]); 6(—Ä–∞–¥–∏—É—Å [r])}. */
    float DEA[26][9];   /* –º–∞—Å—Å–∏–≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –æ–±–ª–∞—Å—Ç–∏ –æ–ø–∞—Å–Ω—ã—Ö —Ä–∞–∑—Ä—ã–≤–æ–≤ (Dangerous Explosion Area)
                           —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ó– –ö [–Ω—É–ª–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è] */

    void initFEoptions();
    void evalDangerousExplosionsArea();

    void damageCalculation();

    QMap<QString, QObject*> initMap; // textFields map
    QMap<QString, QObject*> cbMap;   // comboBoxes map
//    QGroupBox* radioBox = nullptr;   // weapon radioBox
    QMap<quint8, QObject*> resMap;   // damage map


    void clrInitMap();
    void clrResMap();


    int _radioButoon{0};
    int _numCheckBox{0};
};

#endif // CALCULATIONMODEL_H
